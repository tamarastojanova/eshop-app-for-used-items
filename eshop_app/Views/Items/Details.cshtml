@model eshop_app.Models.DetailsForItemViewModel

@{
    ViewBag.Title = "Details";
    bool isAlreadyInCart = (bool)ViewBag.IsAlreadyInCart;
    bool theirItem = (bool)ViewBag.theirItem;
    bool heavy = (bool)ViewBag.heavy;
}

<head>
    <link rel="stylesheet" href="~/Content/custom-styles.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" rel="stylesheet">

    <style>
        .form-horizontal {
            max-width: 600px; /* Adjust the max-width as needed */
            margin: auto;
        }

        .form-group {
            margin-bottom: 20px; /* Adjust the margin between form groups */
            margin-left: 23%;
        }

        span {
            display: block;
            font-weight: bold;
            margin-bottom: 8px;
        }

        input[type="text"],
        input[type="url"] {
            width: 100%;
            padding: 10px;
            border-radius: 10px;
            border: 1px solid #E1B800; /* Border color */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Box shadow */
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        .form-control {
            width: 20%;
            padding: 10px;
            border-radius: 10px;
            border: 1px solid #71E39D; /* Border color */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Box shadow */
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        h1 {
            margin-top: 2%;
            text-align: center;
        }

        body {
            margin: 0;
            padding: 0;
            background-color: #F8F9FA;
            text-align: center;
            font-size: 20px;
        }

        .container.body-content {
            margin-top: 0; /* Remove the default top margin */
            margin-bottom: 0;
        }

        .form-container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            margin-top: 20px;
        }

        h2 {
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-control {
            border-radius: 5px;
        }

        .btn-fancy {
            padding: 0.4rem;
            background-color: #FED959;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            font-size: 18.5px;
            font-family: "Times New Roman";
            border: none;
            border-radius: 10px;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.3s ease;
            color: white;
            margin-right: -3%;
        }

            .btn-fancy i {
                margin-right: 0.3rem;
                margin-left: 0.3rem;
                margin-top: 0.2rem;
            }

            .btn-fancy:hover {
                background-color: #FFD547;
                color: white;
            }

        .btn-container {
            text-align: center;
        }

            .btn-container button {
                margin: 0 10px;
            }

        .btn-disabled {
            padding: 0.4rem;
            background-color: lightgrey;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            font-size: 18.5px;
            font-family: "Times New Roman";
            border: none;
            border-radius: 10px;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.3s ease;
            color: white;
            margin-right: -3%;
        }

            .btn-disabled i {
                margin-right: 0.3rem;
                margin-left: 0.3rem;
                margin-top: 0.2rem;
            }

        .btn-back {
            padding: 0.4rem;
            background-color: lightgrey;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            font-size: 18.5px;
            font-family: "Times New Roman";
            border: none;
            border-radius: 10px;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.3s ease;
            color: white;
            margin-right: -3%;
        }

            .btn-back i {
                margin-right: 0.3rem;
                margin-left: 0.3rem;
                margin-top: 0.2rem;
            }

            .btn-back:hover {
                background-color: lightsteelblue;
                color: white;
            }

        .btn-green {
            padding: 0.4rem;
            background-color: #9AE8B9;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            font-size: 18.5px;
            font-family: "Times New Roman";
            border: none;
            border-radius: 10px;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.3s ease;
            color: white;
            margin-right: -3%;
        }

            .btn-green i {
                margin-right: 0.3rem;
                margin-left: 0.3rem;
                margin-top: 0.2rem;
            }

            .btn-green:hover {
                background-color: #71E39D;
                color: white;
            }
    </style>
</head>


<h1>Details</h1>
<hr />

<img src="@Model.main_image" class="img-fluid main-image" data-bs-toggle="modal" style="max-width: 30%; max-height: 20%; box-shadow: 5px 5px 7px rgba(0, 0, 0, 0.5); " />
<div id="imageCarousel" class="carousel slide mt-3" data-bs-ride="carousel" style="max-height: 180px; margin-top: -2%; margin-bottom: 3%;">
    <div class="carousel-inner">
        @{
            int itemsPerSlide = 5;
            for (int i = 0; i < Model.other_images.Count; i += itemsPerSlide)
            {
                <div class="carousel-item @if (i == 0) { <text>active</text> }">
                    <div class="d-flex">
                        @for (int j = i; j < i + itemsPerSlide && j < Model.other_images.Count; j++)
                        {
                            <img src="@Model.other_images[j]" class="d-block w-100 thumbnail" data-bs-toggle="modal" data-bs-target="#imageModal" style="max-width: 20%; max-height: 180px; box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.4); " alt="Image">
                        }
                    </div>
                </div>
            }
        }
    </div>
    <a class="carousel-control-prev" href="#imageCarousel" role="button" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </a>
    <a class="carousel-control-next" href="#imageCarousel" role="button" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </a>
</div>


<div>
    <dl class="dl-horizontal">
        <div class="row">
            <div class="col-md-6 d-flex flex-column justify-content-center text-center align-items-center">
                <dt>
                    <span>Listing title</span>
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.listing_title)
                </dd>

                <dt>
                    <span>Item description</span>
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.description)
                </dd>

                <dt>
                    <span>Item quantity</span>
                </dt>

                <dd>
                    <form id="addToCartForm" action="@Url.Action("AddItem", "Baskets")" method="post">
                        <!-- <div class="quantity-input">
                            <button class="quantity-btn" onclick="decrementQuantity()">-</button>
                            <input type="number" id="quantity" name="quantity" min="1" max="@Model.quantity" value="1" />
                            <button class="quantity-btn" onclick="incrementQuantity()">+</button>
                        </div> -->

                        @if (Model.quantity > 0)
                        {
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 1, @max = Model.quantity, @id = "quantityid", @style = "width: 70px;" } })
                                    @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger", @id = "quantityValidationMessage" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 1, @max = Model.quantity, @id = "quantityid", @disabled = "disabled", @style = "width: 70px;" } })
                                    @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger", @id = "quantityValidationMessage" })
                                </div>
                                <p>Out of stock!</p>
                            </div>
                        }

                        @if (!isAlreadyInCart && !theirItem && !heavy)
                        {
                            if (Model.quantity > 0)
                            {
                                <button class="add-to-cart-btn btn-green" onclick="addToCart()">
                                    <i class="fa fa-shopping-cart"></i> Add to Cart
                                </button>
                                <input type="hidden" name="itemId" value="@Model.id_item" />
                            }
                            else
                            {
                                <button class="disabled-btn btn-disabled" disabled>
                                    <i class="fa fa-shopping-cart"></i> Add to Cart
                                </button>
                                <input type="hidden" name="itemId" value="@Model.id_item" />
                            }
                        }
                        else if (isAlreadyInCart && !theirItem)
                        {
                            <a class="view-cart-btn btn-fancy" href="@Url.Action("Index", "Baskets")">
                                <i class="fa fa-shopping-cart"></i> View in Cart
                            </a>
                        }
                        else if (theirItem)
                        {
                            <a class="view-cart-btn btn-fancy" href="@Url.Action("Edit", "Items", new { id = Model.id_item })">
                                <i class="fa fa-pencil"></i> Edit listing
                            </a>
                        }
                        else if (heavy)
                        {
                            <button id="contactSellerBtnHeavy" class="contact-seller-btn btn-green" type="button"
                                    onclick="showSellerInfoHeavy()">
                                <i class="fa fa-envelope"></i> Make an offer with the seller
                            </button>
                        }
                    </form>
                </dd>
                <div id="sellerInfoHeavy" style="display: none;">
                    <dt>
                        Seller info:
                    </dt>
                    <dd>
                        <div style="margin-bottom: -6%;">
                            <img src="@Model.profile_picture" alt="Other Image" style="width: 50px; height: 50px; border-radius: 25px;
                box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); margin-right: 4%; margin-bottom: 3%;" />
                            @($"{Html.DisplayFor(model => model.seller_name)} {Html.DisplayFor(model => model.surname)}")
                        </div>
                        <br />
                        Contact:
                        <br />
                        @Html.DisplayFor(model => model.email), @Html.DisplayFor(model => model.phone_number)
                        <br />
                        <button id="hideSellerInfoHeavyBtn" class="hide-seller-info-btn btn-back" onclick="hideSellerInfoHeavy()" style="margin-top: 1%;">
                            <i class="fa fa-times"></i> Hide Seller Info
                        </button>
                    </dd>
                </div>
            </div>
            <div class="col-md-6 d-flex flex-column justify-content-center text-center align-items-center">
                <dt>
                    <span>Item condition</span>
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.item_condition)
                </dd>

                <dt>
                    <span>Price</span>
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.price)$
                </dd>
                @{
                    string categoryNames = string.Join(", ", Model.categories.Select(cat => cat.CategoryName));
                }
                <dt>
                    <span>Categories</span>
                </dt>
                <dd>
                    @categoryNames
                </dd>

                @if (!heavy)
                {
                    <button id="contactSellerBtn" class="contact-seller-btn btn-green" onclick="showSellerInfo()">
                        <i class="fa fa-envelope"></i> Contact Seller
                    </button>
                }

                <!-- Seller information -->
                <div id="sellerInfo" style="display: none;">
                    <dt>
                        Seller info
                    </dt>
                    <dd>
                        <img src="@Model.profile_picture" alt="Other Image" style="width: 50px; height: 50px; border-radius: 25px;
                box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); margin-right: 4%; margin-bottom: 3%;" />
                        @($"{Html.DisplayFor(model => model.seller_name)} {Html.DisplayFor(model => model.surname)}")
                        <br />
                        Contact:
                        <br />
                        @Html.DisplayFor(model => model.email), @Html.DisplayFor(model => model.phone_number)
                        <br />
                        <button id="hideSellerInfoBtn" class="hide-seller-info-btn btn-back" onclick="hideSellerInfo()" style="margin-top: 3%;">
                            <i class="fa fa-times"></i> Hide Seller Info
                        </button>
                    </dd>
                </div>
            </div>
        </div>
    </dl>
</div>

<div class="modal fade" id="mainImageModal" tabindex="-1" aria-labelledby="mainImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-a">
        <div class="modal-content">
            <div class="modal-body">
                <img src="@Model.main_image" class="img-fluid" />
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <img src="" class="img-fluid" id="modalImage" style="display: block; margin: auto; max-width: 100%; max-height: 100%; " />
            </div>
        </div>
    </div>
</div>

<p>
    <button type="button" onclick="window.location.href='@Url.Action("Index")'" class="btn btn-back" style="margin-left: -90%; margin-bottom: 2%;">
        <i class="fa fa-arrow-left"></i> Back to list
    </button>
</p>
<script>
    document.getElementById('quantityid').value = 1;

    function showSellerInfo() {
        // Hide the "Contact seller" button
        document.getElementById('contactSellerBtn').style.display = 'none';

        // Show the seller information with animation
        var sellerInfo = document.getElementById('sellerInfo');
        sellerInfo.style.display = 'block';
        sellerInfo.style.opacity = 0;

        // Animate the opacity
        var opacity = 0;
        var animationInterval = setInterval(function () {
            if (opacity < 1) {
                opacity += 0.1;
                sellerInfo.style.opacity = opacity;
            } else {
                clearInterval(animationInterval);
            }
        }, 100);
    }

    function showSellerInfoHeavy() {
        // Hide the "Contact seller" button
        document.getElementById('contactSellerBtnHeavy').style.display = 'none';

        // Show the seller information with animation
        var sellerInfo = document.getElementById('sellerInfoHeavy');
        sellerInfo.style.display = 'block';
        sellerInfo.style.opacity = 0;

        // Animate the opacity
        var opacity = 0;
        var animationInterval = setInterval(function () {
            if (opacity < 1) {
                opacity += 0.1;
                sellerInfo.style.opacity = opacity;
            } else {
                clearInterval(animationInterval);
            }
        }, 100);
    }

    function hideSellerInfoHeavy() {
        // Hide the "Hide Seller Info" button

        // Show the "Contact seller" button

        // Hide the seller information with animation
        var sellerInfo = document.getElementById('sellerInfoHeavy');
        var opacity = 1;
        var animationInterval = setInterval(function () {
            if (opacity > 0) {
                opacity -= 0.1;
                sellerInfo.style.opacity = opacity;
            } else {
                sellerInfo.style.display = 'none';
                clearInterval(animationInterval);
                document.getElementById('contactSellerBtnHeavy').style.display = 'block';
            }
        }, 100);
    }

    function hideSellerInfo() {
        // Hide the "Hide Seller Info" button

        // Show the "Contact seller" button

        // Hide the seller information with animation
        var sellerInfo = document.getElementById('sellerInfo');
        var opacity = 1;
        var animationInterval = setInterval(function () {
            if (opacity > 0) {
                opacity -= 0.1;
                sellerInfo.style.opacity = opacity;
            } else {
                sellerInfo.style.display = 'none';
                clearInterval(animationInterval);
                document.getElementById('contactSellerBtn').style.display = 'block';
            }
        }, 100);
    }

    function validateQuantity() {
        var quantityInput = document.getElementById('quantityid');
        var maxQuantity = parseInt(quantityInput.getAttribute('max'));
        var enteredQuantity = parseInt(quantityInput.value);

        if (enteredQuantity > maxQuantity) {
            return false;
        }

        return true;
    }

    function incrementQuantity() {
        var quantityInput = document.getElementById("quantity");
        var currentValue = parseInt(quantityInput.value);
        if (currentValue < @Model.quantity) {
            quantityInput.value = currentValue + 1;
        }
    }

    function decrementQuantity() {
        var quantityInput = document.getElementById("quantity");
        var currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
        }
    }

    function addToCart() {
        if (validateQuantity()) {
            document.getElementById("addToCartForm").submit();
        } else {
            document.getElementById('quantityValidationMessage').innerText = 'Quantity exceeds maximum.';
        }
    }
</script>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize the Bootstrap carousel
        $(document).ready(function () {
            $('#imageCarousel').carousel();
        });
        $('.thumbnail').click(function () {
            var imageUrl = $(this).attr('src');
            $('#modalImage').attr('src', imageUrl);
            $('#imageModal').modal('show');
        });
        $('.main-image').click(function () {
            var imageUrl = $(this).attr('src');
            $('#modalImage').attr('src', imageUrl);
            $('#imageModal').modal('show');
        });
    </script>
}