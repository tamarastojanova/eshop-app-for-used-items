@model eshop_app.Models.Item

@{
    ViewBag.Title = "Edit";
}

<h1>Edit listing</h1>
<hr />

<head>
    <style>

        .form-horizontal {
            max-width: 600px; /* Adjust the max-width as needed */
            margin: auto;
        }

        .form-group {
            margin-bottom: 20px; /* Adjust the margin between form groups */
            margin-left: 27%;
        }

        span {
            display: block;
            font-weight: bold;
            margin-bottom: 8px;
        }

        input[type="text"],
        input[type="url"],
        input[type="number"] {
            width: 100%;
            padding: 10px;
            border-radius: 10px;
            border: 1px solid #E1B800; /* Border color */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Box shadow */
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border-radius: 10px;
            border: 1px solid #E1B800; /* Border color */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Box shadow */
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        h1 {
            margin-top: 5%;
            text-align: center;
        }

        body {
            margin: 0;
            padding: 0;
            background-color: #F8F9FA;
        }

        .container.body-content {
            margin-top: 0; /* Remove the default top margin */
            margin-bottom: 0;
        }

        .form-container {
            max-width: 600px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            margin-top: 20px;
        }

        h2 {
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-control {
            border-radius: 5px;
        }

        .btn-fancy {
            padding: 0.4rem;
            background-color: #FED959;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            font-size: 18.5px;
            font-family: "Times New Roman";
            border: none;
            border-radius: 10px;
            text-decoration: none;
            display: inline-block;
            transition: background-color 0.3s ease;
            color: white;
            margin-left: 50%;
            margin-top: -3%;
        }

            .btn-fancy i {
                margin-right: 0.3rem;
                margin-left: 0.3rem;
                margin-top: 0.2rem;
            }

            .btn-fancy:hover {
                background-color: #FFD547;
                color: white;
            }

        .btn-container {
            text-align: center;
        }

            .btn-container button {
                margin: 0 10px;
            }
    </style>
</head>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-6">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
                <span>Product</span>
                @Html.DropDownListFor(model => model.ProductId, (SelectList)ViewBag.ProductId,
                    "Select product: ",
                    new { @class = "form-control", @value = Model.ProductId }
                )
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
        </div>

        @Html.HiddenFor(model => model.SellerId)
        @Html.HiddenFor(model => model.DateAddedForSale)
        @Html.HiddenFor(model => model.upForSale)

    <div class="form-group">
        <span>Item condition</span>
        @Html.DropDownListFor(model => model.ItemCondition, new SelectList(
            new List<SelectListItem>
            {
                new SelectListItem { Text = "Used – Like New", Value = "Used – Like New" },
                new SelectListItem { Text = "Used – Very Good", Value = "Used – Very Good" },
                new SelectListItem { Text = "Used – Good", Value = "Used – Good" },
                new SelectListItem { Text = "Used - Poor", Value = "Used - Poor" },
            }, "Value", "Text"),
            "Select Item Condition",
            new { @class = "form-control" }
        )
        @Html.ValidationMessageFor(model => model.ItemCondition, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <span>Main image</span>
        @Html.EditorFor(model => model.MainImage, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MainImage, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        <span>Quantity</span>
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @min = 1 } })
        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <span>Listing title</span>
        @Html.EditorFor(model => model.ListingTitle, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ListingTitle, "", new { @class = "text-danger" })
    </div>
    </div>

  <div class="col-md-6">

      <div class="form-group">
          <span>Description</span>
          @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4, cols = 40 })
          @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
      </div>

      <div class="form-group">
          <span>Price</span>
          @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @type = "number", @min = 0.01, @value = 0, @step = 0.01 })
          @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
      </div>

      <div class="form-group">
          <span>Weight</span>
          @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
      </div>

      <div class="form-group">
          <span>Location</span>
          @Html.DropDownListFor(model => model.Location, new SelectList(
              new List<SelectListItem>
              {
                  new SelectListItem { Text = "Skopje, Aerodrom", Value = "Skopje, Aerodrom" },
                  new SelectListItem { Text = "Skopje, Butel", Value = "Skopje, Butel" },
                  new SelectListItem { Text = "Skopje, Gazi Baba", Value = "Skopje, Gazi Baba" },
                  new SelectListItem { Text = "Skopje, Gjorche Petrov", Value = "Skopje, Gjorche Petrov" },
                  new SelectListItem { Text = "Skopje, Karposh", Value = "Skopje, Karposh" },
                  new SelectListItem { Text = "Skopje, Kisela Voda", Value = "Skopje, Kisela Voda" },
                  new SelectListItem { Text = "Skopje, Saraj", Value = "Skopje, Saraj" },
                  new SelectListItem { Text = "Skopje, Centar", Value = "Skopje, Centar" },
                  new SelectListItem { Text = "Skopje, Chair", Value = "Skopje, Chair" },
                  new SelectListItem { Text = "Skopje, Shuto Orizari", Value = "Skopje, Shuto Orizari" },
                  new SelectListItem { Text = "Berovo", Value = "Berovo" },
                  new SelectListItem { Text = "Bitola", Value = "Bitola" },
                  new SelectListItem { Text = "Debar", Value = "Debar" },
                  new SelectListItem { Text = "Delchevo", Value = "Delchevo" },
                  new SelectListItem { Text = "Demir Kapija", Value = "Demir Kapija" },
                  new SelectListItem { Text = "Demir Hisar", Value = "Demir Hisar" },
                  new SelectListItem { Text = "Gevgelija", Value = "Gevgelija" },
                  new SelectListItem { Text = "Gostivar", Value = "Gostivar" },
                  new SelectListItem { Text = "Kavadarci", Value = "Kavadarci" },
                  new SelectListItem { Text = "Kichevo", Value = "Kichevo" },
                  new SelectListItem { Text = "Kochani", Value = "Kochani" },
                  new SelectListItem { Text = "Kratovo", Value = "Kratovo" },
                  new SelectListItem { Text = "Kriva Palanka", Value = "Kriva Palanka" },
                  new SelectListItem { Text = "Krushevo", Value = "Krushevo" },
                  new SelectListItem { Text = "Kumanovo", Value = "Kumanovo" },
                  new SelectListItem { Text = "Makedonski Brod", Value = "Makedonski Brod" },
                  new SelectListItem { Text = "Makedonska Kamenica", Value = "Makedonska Kamenica" },
                  new SelectListItem { Text = "Negotino", Value = "Negotino" },
                  new SelectListItem { Text = "Ohrid", Value = "Ohrid" },
                  new SelectListItem { Text = "Pehchevo", Value = "Pehchevo" },
                  new SelectListItem { Text = "Prilep", Value = "Prilep" },
                  new SelectListItem { Text = "Probishtip", Value = "Probishtip" },
                  new SelectListItem { Text = "Radovish", Value = "Radovish" },
                  new SelectListItem { Text = "Resen", Value = "Resen" },
                  new SelectListItem { Text = "Sveti Nikole", Value = "Sveti Nikole" },
                  new SelectListItem { Text = "Struga", Value = "Struga" },
                  new SelectListItem { Text = "Strumica", Value = "Strumica" },
                  new SelectListItem { Text = "Shtip", Value = "Shtip" },
                  new SelectListItem { Text = "Tetovo", Value = "Tetovo" },
                  new SelectListItem { Text = "Valandovo", Value = "Valandovo" },
                  new SelectListItem { Text = "Veles", Value = "Veles" },
                  new SelectListItem { Text = "Vinica", Value = "Vinica" },
              }, "Value", "Text"),
              "Select city/municipality: ",
              new { @class = "form-control", @value = Model.Location }
          )
          @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
      </div>
    </div>

  <div class="btn-container">
      <button type="button" onclick="window.location.href='@Url.Action("Index")'" class="btn btn-fancy">
          <i class="fa fa-arrow-left"></i> Cancel
      </button>
      <button type="submit" class="btn btn-fancy">
          <i class="fa fa-save"></i> Save
      </button>
  </div>
</div>
}


@section scripts {
    <script>
        $(document).ready(function () {
            var productId = @Html.Raw(Json.Encode(Model.ProductId));
            $("#ProductId").val(productId);
        });
    </script>
}
